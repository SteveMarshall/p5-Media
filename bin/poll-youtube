#!/usr/bin/env perl

use Modern::Perl;
use Getopt::Long    qw( :config bundling );
use Media;
use Pod::Usage;
use Storable        qw( nstore retrieve );
use WebService::GData::YouTube;
use WebService::GData::YouTube::Feed;

use constant FORMAT_CODES     => qw( 37 22 18 );
use constant OPTIONS          => qw(
                                       config|c=s
                                         user|u=s
                                     priority|p=i
                                 );
use constant REQUIRED_OPTIONS => qw( user );



my %option = get_options_or_exit( priority => '5' );
my $media  = Media->new( $option{'config'} );
my $yt     = new WebService::GData::YouTube();
my $videos = $yt->get_user_favorite_videos( $option{'user'} );
my $cache  = sprintf "%s/youtube.store",
                $media->full_configuration->{''}{'cache_directory'};
my $encode = $media->full_configuration->{''}{'encode_directory'};
my $seen   = {};


chdir $encode
    or die "chdir $encode: $!";
$seen = retrieve $cache
    if -f $cache;

VIDEO:
foreach my $video ( @$videos ) {
    my $slug = $video->video_id;
    next if defined $seen->{$slug};
    
    system(
        'youtube',
        '--priority',
        $option{'priority'},
        '--series',
        'YouTube Favourites',
    );
}

nstore $seen, $cache;
exit;



sub get_options_or_exit {
    my %getopts = @_;
    
    my $known = GetOptions( \%getopts, OPTIONS );
    my $usage = ! $known || $getopts{'help'};
    
    foreach my $key ( REQUIRED_OPTIONS ) {
        $usage = 1
            unless defined $getopts{ $key };
    }
    
    pod2usage() if $usage;
    
    return %getopts;
}

__END__

=head1 NAME

poll-youtube - enqueue new YouTube favourites

=head1 SYNOPSIS
    
    poll-youtube [-c <config>] -u <user>

Will check for new YouTube favourites from I<user>, download new ones and
queue them up to be converted.

They will be saved as TV shows in the series "YouTube Favourites".

=head1 AUTHOR

Mark Norman Francis, L<norm@cackhanded.net>.

=head1 COPYRIGHT AND LICENSE

Copyright 2012 Mark Norman Francis.

This library is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
