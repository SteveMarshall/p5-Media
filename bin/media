#!/ports/bin/perl

use Modern::Perl;

use Cwd;
use Getopt::Std;
use Media;
use Pod::Usage;


# default priority = 50
my %opt = ( p => 50 );
getopts( 'p:', \%opt );

my $media    = Media->new();
my $base     = $media->get_config( 'base_directory' );
my $argument = shift
            // '';

given ( $argument ) {
    when ( -d ) {
        # directory, possibly containing other directories
        # (can be multiple arguments)
        while ( defined $argument ) {
            # make relative paths absolute so the encoder can find them
            if ( $argument !~ m{^/} ) {
                my $current_dir = getcwd();
                $argument = "${current_dir}/${argument}";
            }
            
            # if the argument is in the base, trim the full pathname 
            # (I find this makes the logs much easier to read quickly)
            $argument =~ s{^$base/}{};
            
            $media->process_directory( $argument, $opt{'p'} );
            $argument = shift;
        }
    }
    when ( m{^[A-Z]+$} ) {
        # result of unraring of media file
        $media->process_result( $argument, @ARGV );
    }
    default {
        pod2usage();
    }
}

exit;

__END__

=head1 NAME

B<media> - electronic media control script

=head1 USAGE

B<media> F<directory> [...]

For each directory passed as an argument, B<media> will do one of the
following:

=over

=item

if the directory contains a F<VIDEO_TS> folder, it will treat it as a DVD
image and:

=over

=item

if the directory also contains a F<dvd.conf> file, it will queue up all titles
on the DVD that are not marked C<ignore> for re-encoding.

=item

otherwise, it will analyse the DVD image, generate a F<dvd.conf> and launch
it in your text editor (see L<DVD configuration> in L<Media::Handler::DVD>).

=back

=item

if the directory contains a successfully converted file, it will install the
file in the right location (see L<Locations> in the main L<Media>
documentation).

=item

if the directory contains a video file with a known file extension (F<.avi>,
F<.mkv>, F<.m4v> or F<.mp4>) it will queue up that file for re-encoding.

=item

otherwise, if the directory contains more directories, it will attempt the
above in each sub-directory.

=back

=head1 SEE ALSO

Run C<perldoc Media> to read more.
